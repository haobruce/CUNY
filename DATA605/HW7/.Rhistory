setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW7")
x = c(1,2,3,4,5,6)
mean_sd_running = function(x) {
mean_new = (mean_old * n + sum(x)) / (n + length(x))
assign('n', 0, envir = .GlobalEnv)
assign('mean_old', 0, envir = .GlobalEnv)
assign('sd_old', 0, envir = .GlobalEnv)
return(mean_new)
}
mean_sd_running(x)
if !exists(n) {assign('n', 0, envir = .GlobalEnv)}
if exists(n) {assign('n', 0, envir = .GlobalEnv)}
exists(n)
exists('n')
if (exists('n')) {
assign('n', 0, envir = .GlobalEnv)
}
n
if !(exists('n')) { assign('n', 0, envir = .GlobalEnv) }
if (!exists('n')) { assign('n', 0, envir = .GlobalEnv) }
n
mean_sd_running = function(x) {
if (!exists('n')) { assign('n', 0, envir = .GlobalEnv) }
if (!exists('mean_old')) { assign('mean_old', 0, envir = .GlobalEnv) }
if (!exists('sd_old')) { assign('sd_old', 0, envir = .GlobalEnv) }
mean_new = (mean_old * n + sum(x)) / (n + length(x))
return(mean_new)
}
y = c(7,8,9,10)
mean_sd_running(x)
mean_sd_running(y)
mean_old
mean_sd_running = function(x) {
# if global variables do not exists, then define them
if (!exists('x_running')) {
assign('x_running', x, envir = .GlobalEnv)
} else {
assign('x_running', c(x_running, x), envir = .GlobalEnv)
}
#  if (!exists('mean_old')) { assign('mean_old', 0, envir = .GlobalEnv) }
#  if (!exists('sd_old')) { assign('sd_old', 0, envir = .GlobalEnv) }
return(mean(x))
}
y = c(7,8,9,10)
mean_sd_running(x)
mean_sd_running(y)
x_running
mean_sd_running = function(x) {
# if global variables do not exists, then define them
if (!exists('x_running')) {
assign('x_running', x, envir = .GlobalEnv)
} else {
assign('x_running', c(x_running, x), envir = .GlobalEnv)
}
#  if (!exists('mean_old')) { assign('mean_old', 0, envir = .GlobalEnv) }
#  if (!exists('sd_old')) { assign('sd_old', 0, envir = .GlobalEnv) }
return(mean(x_running))
}
y = c(7,8,9,10)
mean_sd_running(y)
mean_sd_running(y)
mean_sd_running(y)
mean_sd_running(y)
mean_sd_running = function(x) {
# define global variable for expanding array x
if (!exists('x_running')) {
assign('x_running', x, envir = .GlobalEnv)
} else {
assign('x_running', c(x_running, x), envir = .GlobalEnv)
}
return(list(mean = mean(x_running), sd = sd(x_running)))
}
x_running = NULL
mean_sd_running(x)
mean_sd_running(y)
z = c(11,12,13,14,15,16)
mean_sd_running(z)
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW7")
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
}
x0 = c(3,4,5,6,7,8,9,10,11)
mean(x0)
mu0 = mean(x0)
n0 = length(x)
n0 = length(x0)
x1 = seq(11,19)
x11
x1
mean_running(x1, n0, mu0)
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
return(mu)
}
mean_running(x1, n0, mu0)
# this time without cheating and using global variables
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
return(mu)
}
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 + n0 * (mu - mu0)^2
ssdiff = ssdiff0 + var(x1) * length(x1)
sd = sqrt(ssdiff / (length(x1) + n0))
return(sd)
}
sd_running(x1, length(x0), mean(x0), sd(x0))
ssdiff0 = sig0^2 + n0 * (mu - mu0)^2
sd(x0)
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 + n0 * (mu - mu0)^2
ssdiff = ssdiff0 + var(x1) * length(x1)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))
return(sd)
}
sd_running(x1, length(x0), mean(x0), sd(x0))
mu = mean_running(x1, n0, mu0)
mu
ssdiff0 = sig0^2 + n0 * (mu - mu0)^2
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 * (n - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff = ssdiff0 + var(x1) * length(x1)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))  # n-1 in denominator
return(sd)
}
sd_running(x1, length(x0), mean(x0), sd(x0))
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 * (n0 - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff = ssdiff0 + var(x1) * length(x1)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))  # n-1 in denominator
return(sd)
}
sd_running(x1, length(x0), mean(x0), sd(x0))
sig0 = sd(x0)
sig0
sig0^2*(length(x0)-1)
ssdiff0 = sig0^2 * (n0 - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff0
ssdiff = ssdiff0 + var(x1) * length(x1)
ssdiff
var(x1) * length(x1)
ssdiff = ssdiff0 + sum(x1 - mu)^2 * length(x1)
ssdiff
ssdiff = ssdiff0 + sum((x1 - mu)^2) * length(x1)
ssdiff
sum((x1 - mu)^2)
ssdiff = ssdiff0 + sum((x1 - mu)^2)
ssdiff
# this time without cheating and using global variables
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
return(mu)
}
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 * (n0 - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff = ssdiff0 + sum((x1 - mu)^2)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))  # n-1 in denominator
return(sd)
}
sd_running(x1, length(x0), mean(x0), sd(x0))
sd(c(x0,x1))
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW7")
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / (length(x) - 1))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5)
mean_sd(x)
mean(x)
sd(x)
mean_sd_running = function(x) {
# define global variable for expanding array x
if (!exists('x_running')) {
assign('x_running', x, envir = .GlobalEnv)
} else {
assign('x_running', c(x_running, x), envir = .GlobalEnv)
}
return(list(mean = mean(x_running), sd = sd(x_running)))
}
mean_sd_running(x)
y = c(6,7,8,9,10)
mean_sd_running(y)
z = c(11,12,13,14,15)
mean_sd_running(z)
# this time without cheating and using global variables
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
return(mu)
}
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 * (n0 - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff = ssdiff0 + sum((x1 - mu)^2)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))  # n-1 in denominator
return(sd)
}
mean_running(y, length(x), mean(x))
sd_running(y, length(x), mean(x), sd(x))
mean_running(c(y, z), length(x), mean(x))
sd_running(c(y, z), length(x), mean(x), sd(x))
xy = c(x, y)
mean_running(z, length(xy), mean(xy))
sd_running(z, length(xy), mean(x), sd(xy))
sd_running(z, length(xy), mean(xy), sd(xy))
# this time without cheating and using global variables
mean_running = function(x1, n0, mu0) {
mu = (sum(x1) + n0 * mu0) / (length(x1) + n0)
return(mu)
}
sd_running = function(x1, n0, mu0, sig0) {
mu = mean_running(x1, n0, mu0)
ssdiff0 = sig0^2 * (n0 - 1) + n0 * (mu - mu0)^2  # n-1 in denominator
ssdiff = ssdiff0 + sum((x1 - mu)^2)
sd = sqrt(ssdiff / (length(x1) + n0 - 1))  # n-1 in denominator
return(sd)
}
mean_running(y, length(x), mean(x))
sd_running(y, length(x), mean(x), sd(x))
xy = c(x, y)
mean_running(z, length(xy), mean(xy))
sd_running(z, length(xy), mean(xy), sd(xy))
