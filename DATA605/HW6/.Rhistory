install.packages("RODBC")
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("scales")
install.packages("ggthemes")
install.packages("ggrepel")
install.packages("stringr")
source('G:/INVESTMENT TEAM/Invest Statements/Internal Reporting/R/ReturnAnalysis_FundDirect.R', echo=TRUE)
source('G:/INVESTMENT TEAM/Invest Statements/Internal Reporting/R/ReturnAnalysis_ScatterAC.R', echo=TRUE)
source('G:/INVESTMENT TEAM/Invest Statements/Internal Reporting/R/ReturnAnalysis_FundDirectSAC.R', echo=TRUE)
str(qry)
qry
dbhandle <- odbcDriverConnect('driver={SQL Server};server=sql01.capricornllc.net;
database=CapricornDB;trusted_connection=true')
qry = sqlQuery(dbhandle, "
SELECT 'Sequoia Portfolio' AS 'LegalEntityName', 'Natural Resources' AS 'SAC', 'Fund' AS 'FundDirect', 'Actual' AS 'ActualPolicy', EOMONTH(PeriodDate,0) AS 'PeriodDate', [Return],
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate AND t.SecondaryAssetClass = 'Natural Resources' AND t.FundDirect = 'Fund') AS EndingValue,
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate) AS PortNAV
FROM dbo.udf_CombinedConsolidatedReturns(96, NULL, 'Natural Resources', 'Fund', NULL, '01/01/2011', '11/30/2016') a
UNION ALL
SELECT 'Sequoia Portfolio' AS 'LegalEntityName', 'Natural Resources' AS 'SAC', 'Direct' AS 'FundDirect', 'Actual' AS 'ActualPolicy', EOMONTH(PeriodDate,0) AS 'PeriodDate', [Return],
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate AND t.SecondaryAssetClass = 'Natural Resources' AND t.FundDirect = 'Direct') AS EndingValue,
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate) AS PortNAV
FROM dbo.udf_CombinedConsolidatedReturns(96, NULL, 'Natural Resources', 'Direct', NULL, '01/01/2011', '11/30/2016') a
UNION ALL
SELECT 'Sequoia Portfolio' AS 'LegalEntityName', 'Real Estate & Infrastructure' AS 'SAC', 'Fund' AS 'FundDirect', 'Actual' AS 'ActualPolicy', EOMONTH(PeriodDate,0) AS 'PeriodDate', [Return],
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate AND t.SecondaryAssetClass = 'Real Estate & Infrastructure' AND t.FundDirect = 'Fund') AS EndingValue,
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate) AS PortNAV
FROM dbo.udf_CombinedConsolidatedReturns(96, NULL, 'Real Estate & Infrastructure', 'Fund', NULL, '01/01/2011', '11/30/2016') a
UNION ALL
SELECT 'Sequoia Portfolio' AS 'LegalEntityName', 'Real Estate & Infrastructure' AS 'SAC', 'Direct' AS 'FundDirect', 'Actual' AS 'ActualPolicy', EOMONTH(PeriodDate,0) AS 'PeriodDate', [Return],
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate AND t.SecondaryAssetClass = 'Real Estate & Infrastructure' AND t.FundDirect = 'Direct') AS EndingValue,
(SELECT SUM(EndingValue) FROM v_LegalEntityDealValue t
WHERE LegalEntityName = 'Sequoia Portfolio' AND t.PeriodDate = a.PeriodDate) AS PortNAV
FROM dbo.udf_CombinedConsolidatedReturns(96, NULL, 'Real Estate & Infrastructure', 'Direct', NULL, '01/01/2011', '11/30/2016') a
UNION ALL
SELECT LegalEntityName, AssetClass AS 'SAC', 'Policy' AS 'FundDirect', 'Policy' AS 'ActualPolicy', PeriodDate, BmReturn, 0 AS EndingValue, 0 AS PortNAV
FROM [CapricornUser].dbo.usr_LTPolicy
WHERE LegalEntityName = 'Sequoia Portfolio'
AND AssetClass IN ('Natural Resources', 'Real Estate & Infrastructure')
AND [Level] = 2
AND PeriodDate > '12/31/10'
")
str(qry)
qry$PeriodDate = as.Date(qry$PeriodDate)
qry$Year = as.numeric(format(qry$PeriodDate, '%Y'))
qry_summary = qry %>% group_by(LegalEntityName, SAC, FundDirect, Year) %>%
summarise(ReturnCum = exp(sum(log(1 + Return)))-1, AvgWeight = mean(EndingValue)/mean(PortNAV))
qry_combined = qry %>% group_by(LegalEntityName, SAC, FundDirect) %>%
summarise(ReturnCum = exp(sum(log(1 + Return)))^(12/n())-1, AvgWeight = mean(EndingValue)/mean(PortNAV)) %>%
mutate(Year = '2011-2016')
qry_summary$Year = as.character(qry_summary$Year)
qry_summary = bind_rows(qry_summary, qry_combined)
qry_summary$Year = factor(qry_summary$Year, levels = c('2011', '2012', '2013', '2014', '2015', '2016', '2011-2016'))
p1 = qry_summary %>%
ggplot(aes(x = Year, y = ReturnCum, fill = FundDirect)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_text(aes(label = format(ReturnCum*100, digits = 0)), size = 3,
position = position_dodge(width = 1), vjust = -0.25) +
facet_grid(. ~ SAC) +
scale_y_continuous(labels = percent) +
scale_fill_economist() +
theme(axis.title.x=element_blank()) +
ylab('TWR') +
ggtitle('Private Fund & Direct Returns')
p2 = qry_summary %>%
ggplot(aes(x = Year, y = AvgWeight, fill = FundDirect)) +
geom_bar(stat = 'identity', position = position_dodge()) +
geom_text(aes(label = format(AvgWeight*100, digits = 0)), size = 3,
position = position_dodge(width = 1), vjust = -0.25) +
facet_grid(. ~ SAC) +
scale_y_continuous(labels = percent) +
scale_fill_economist() +
theme(axis.title.x=element_blank()) +
ylab('Avg NAV')
grid.arrange(p1, p2, nrow = 2, heights = c(2, 1))
source('G:/INVESTMENT TEAM/Invest Statements/Internal Reporting/R/ReturnAnalysis_FundDirectSAC.R', echo=TRUE)
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW6")
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW6")
mean_std = function(x) {
mean_value = sum(x) / length(x)
std_value = (sum(x - mean_value)^2)^0.5 / length(x)
return list(mean = mean_value, std = std_value)
mean_std = function(x) {
mean_value = sum(x) / length(x)
std_value = (sum(x - mean_value)^2)^0.5 / length(x)
return(list(mean = mean_value, std = std_value))
}
x = [1,2,3,4,5,6]
x = c(1,2,3,4,5,6)
mean_std(x)
mean_std = function(x) {
mean_value = sum(x) / length(x)
std_value = (sum(x - mean_value)^2 / length(x))^0.5
return(list(mean = mean_value, std = std_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean_std = function(x) {
mean_value = sum(x) / length(x)
std_value = (sum(x - mean_value)^2 / length(x))^0.5
return(list(mean = mean_value, std = std_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean(x)
std(x)
mean_std = function(x) {
mean_value = sum(x) / length(x)
std_value = (sum(x - mean_value)^2 / length(x))^0.5
return(list(mean = mean_value, std = std_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean(x)
sd(x)
mean_value = sum(x) / length(x)
sum(x - mean_value)^2
x - mean_value
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean(x)
sd(x)
(x - mean_value)^2
sum((x - mean_value)^2)
sum((x - mean_value)^2) / length(x)
(sum((x - mean_value)^2) / length(x))^0.5
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean(x)
sd(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
sd_value
list(mean = mean_value, sd = sd_value)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_std(x)
mean(x)
sd(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
mean_st(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_ss(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_sd(x)
mean(x)
sd(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_sd(x)
mean(x)
sd(x)
sum((x - mean_value)^2)
x - mean_value
(x - mean_value)^2
sum((x - mean_value)^2) / length(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_sd(x)
mean(x)
sd(x)
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA605/HW7")
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / length(x))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_sd(x)
mean(x)
sd(x)
?sd
mean_sd(x)
sd(x)
mean_sd = function(x) {
mean_value = sum(x) / length(x)
sd_value = (sum((x - mean_value)^2) / (length(x) - 1))^0.5
return(list(mean = mean_value, sd = sd_value))
}
x = c(1,2,3,4,5,6)
mean_sd(x)
mean(x)
sd(x)
mean_sd_running(x) {
mean_sd_running(x) {
mean_sd_running = function(x) {
assign('n', 'new', envir = .GlobalEnv)
assign('mean_old', 'new', envir = .GlobalEnv)
assign('sd_old', 'new', envir = .GlobalEnv)
mean_new = c(mean_old * n, x) / (n + length(x))
return(mean_new)
}
mean_sd_running = function(x) {
assign('n', 'new', envir = .GlobalEnv)
assign('mean_old', 'new', envir = .GlobalEnv)
assign('sd_old', 'new', envir = .GlobalEnv)
mean_new = c(mean_old * n, x) / (n + length(x))
return(mean_new)
}
x
x
y = (7,8,9,10)
y = c(7,8,9,10)
mean_sd_running(x)
mean_old
mean_sd_running = function(x) {
assign('n', 0, envir = .GlobalEnv)
assign('mean_old', 0, envir = .GlobalEnv)
assign('sd_old', 0, envir = .GlobalEnv)
mean_new = c(mean_old * n, x) / (n + length(x))
return(mean_new)
}
y = c(7,8,9,10)
mean_sd_running(x)
c(mean_old * n, x) / (n + length(x))
mean_sd_running = function(x) {
assign('n', 0, envir = .GlobalEnv)
assign('mean_old', 0, envir = .GlobalEnv)
assign('sd_old', 0, envir = .GlobalEnv)
mean_new = (mean_old * n sum(x)) / (n + length(x))
mean_sd_running = function(x) {
assign('n', 0, envir = .GlobalEnv)
assign('mean_old', 0, envir = .GlobalEnv)
assign('sd_old', 0, envir = .GlobalEnv)
mean_new = (mean_old * n + sum(x)) / (n + length(x))
return(mean_new)
}
y = c(7,8,9,10)
mean_sd_running(x)
mean_sd_running(y)
mean_old
mean_sd_running = function(x) {
mean_new = (mean_old * n + sum(x)) / (n + length(x))
assign('n', 0, envir = .GlobalEnv)
assign('mean_old', 0, envir = .GlobalEnv)
assign('sd_old', 0, envir = .GlobalEnv)
return(mean_new)
}
y = c(7,8,9,10)
