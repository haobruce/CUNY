setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA621/HW5")
wine = read.csv('wine-training-data.csv', stringsAsFactors = TRUE)
str(wine)
wine = subset(wine, select = -c(INDEX))
str(wine)
wine = subset(wine, select = -c(ï..INDEX))
str(
str(wine)
str(wine)
summary(wine)
wine = read.csv('wine-training-data.csv', stringsAsFactors = TRUE)
wine = subset(wine, select = -c(ï..INDEX))
str(wine)
summary(wine)
wine$TARGET = factor(wine$TARGET, labels = c('no_crash', 'yes_crash'))
library(dplyr)
wine %>% filter(ResidualSugar == 0)
setwd("C:/Users/bhao/Google Drive/CUNY/git/DATA621/HW5")
library(caret)
set.seed(123)
myFolds = createFolds(wine$TARGET, k = 10)
myControl = trainControl(verboseIter = FALSE, savePredictions = TRUE, index = myFolds)
model_glm_full = train(TARGET ~ ., data = wine, metric = 'ROC', method = 'glm',
family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl,
na.action = na.pass)
model_glm_full = train(TARGET ~ ., data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl,
na.action = na.pass)
summary(model_glm_full)
model_glm_full = train(TARGET ~ ., data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
library(ggplot2)
wine %>% ggplot(aes(x = TARGET)) + geom_histogram()
str(wine)
summary(wine)
wine %>% filter(is.na(ResidualSugar)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(Chlorides)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(Chlorides)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(FreeSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(TotalSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(pH)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(Sulphates)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(Alcohol)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(STARS)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine %>% filter(is.na(FreeSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram()
library(gridExtra)
grid.arrange(p1, p2, p3, ncol = 3)
p1 = wine %>% ggplot(aes(x = TARGET)) + geom_histogram() + ggtitle('All Data')
p2 = wine %>% filter(is.na(ResidualSugar)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('ResidualSugar == NA')
p3 = wine %>% filter(is.na(Chlorides)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Chlorides == NA')
p4 = wine %>% filter(is.na(FreeSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('FreeSulfurDioxide == NA')
p5 = wine %>% filter(is.na(TotalSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('TotalSulfurDioxide == NA')
p6 = wine %>% filter(is.na(pH)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('pH == NA')
p7 = wine %>% filter(is.na(Sulphates)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Sulphase == NA')
p8 = wine %>% filter(is.na(Alcohol)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Alcohol == NA')
p9 = wine %>% filter(is.na(STARS)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('STARS == NA')
grid.arrange(p1, p2, p3, ncol = 3)
```{r warning=FALSE, message=FALSE, fig.height = 4, fig.width= 10}
library(dplyr)
library(ggplot2)
library(gridExtra)
wine = read.csv('wine-training-data.csv', stringsAsFactors = TRUE)
# drop index column
wine = subset(wine, select = -c(ï..INDEX))
str(wine)
summary(wine)
p1 = wine %>% ggplot(aes(x = TARGET)) + geom_histogram() + ggtitle('All Data')
p2 = wine %>% filter(is.na(ResidualSugar)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('ResidualSugar == NA')
p3 = wine %>% filter(is.na(Chlorides)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Chlorides == NA')
p4 = wine %>% filter(is.na(FreeSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('FreeSulfurDioxide == NA')
p5 = wine %>% filter(is.na(TotalSulfurDioxide)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('TotalSulfurDioxide == NA')
p6 = wine %>% filter(is.na(pH)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('pH == NA')
p7 = wine %>% filter(is.na(Sulphates)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Sulphase == NA')
p8 = wine %>% filter(is.na(Alcohol)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('Alcohol == NA')
p9 = wine %>% filter(is.na(STARS)) %>% ggplot(aes(x = TARGET)) + geom_histogram() +
ggtitle('STARS == NA')
grid.arrange(p1, p2, p3, ncol = 3)
grid.arrange(p4, p5, p6, ncol = 3)
grid.arrange(p7, p8, p9, ncol = 3)
wine %>% filter(STARS == 0)
impute_median = function(x) replace(x, is.na(x), median(x, na.rm = TRUE))
wine[is.na(wine$STARS), 'STARS']
summary(wine)
wine[is.na(wine$STARS), 'STARS'] = 0
# median imputation
impute_median = function(x) replace(x, is.na(x), median(x, na.rm = TRUE))
wine$ResidualSugar = impute_median(wine$ResidualSugar)
wine$Chlorides = impute_median(wine$Chlorides)
wine$FreeSulfurDioxide = impute_median(wine$FreeSulfurDioxide)
wine$TotalSulfurDioxide = impute_median(wine$TotalSulfurDioxide)
wine$pH = impute_median(wine$pH)
wine$Sulphates = impute_median(wine$Sulphates)
wine$Alcohol = impute_median(wine$Alcohol)
wine[is.na(wine$STARS), 'STARS'] = 0
str(wine)
summary(wine)
set.seed(123)
library(caretEnsemble)
myFolds = createFolds(wine$TARGET, k = 10)
myControl = trainControl(verboseIter = FALSE,savePredictions = TRUE, index = myFolds)
model_glm_full = train(TARGET ~ ., data = wine, metric = 'RMSE', method = 'glm',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_full)
model_glm_full = train(TARGET ~ ., data = wine, metric = 'RMSE', method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_full)
model_glm_sig1 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
pH + Sulphates + LabelAppeal + AcidIndex + STARS,
metric = 'RMSE', method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
model_glm_sig1 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
pH + Sulphates + LabelAppeal + AcidIndex + STARS, data = wine,
metric = 'RMSE', method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig1)
model_glm_sig2 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
metric = 'RMSE', method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
model_glmnet = train(TARGET ~ ., data = wine, metric = 'RMSE', method = 'glmnet', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
model_glm_sig2 = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
metric = 'RMSE', method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
coef(model_glmnet$finalModel, s = model_glmnet$finalModel$tuneValue$lambda)
model_rf = train(TARGET ~ ., data = wine, metric = 'RMSE', method = 'ranger', family = 'poison',
trControl = myControl)
model_rf = train(TARGET ~ ., data = wine, metric = 'RMSE', method = 'ranger',
trControl = myControl)
model_list = list(glm_full = model_glm_full, glm_sig1 = model_glm_sig1, glm_sig2 = model_glm_sig2,
glmnet = model_glmnet, rf = model_rf)
resamps = resamples(model_list)
summary(resamps)
dotplot(resamps, metric = 'RMSE')
model_glm_full = train(TARGET ~ ., data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_full)
model_glm_sig1 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
pH + Sulphates + LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig1)
model_glmnet = train(TARGET ~ ., data = wine, method = 'glmnet', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glmnet)
myControl = trainControl(verboseIter = TRUE, savePredictions = TRUE, index = myFolds)
model_glmnet = train(TARGET ~ ., data = wine, method = 'glmnet', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
library(caret)
library(caretEnsemble)
set.seed(123)
# use cross validation to compare out-of-sample ROC for all models
# use the same folds for each model to ensure comparable results
myFolds = createFolds(wine$TARGET, k = 10)
# used instead of method = 'cv', number = 10
myControl = trainControl(verboseIter = FALSE, savePredictions = TRUE, index = myFolds)
# model using glm model
model_glm_full = train(TARGET ~ ., data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_full)
# let's drop any statistically insignificant variables at 5%
model_glm_sig1 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
pH + Sulphates + LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig1)
# let's again drop any additional statistically insigificant variables at 10%
model_glm_sig2 = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
# let's try a glmnet model that combines ridge vs. lasso regression
# since it penalizes either or both magnitude and number of non-zero coefficients, it can be used for variable selection
model_glmnet = train(TARGET ~ ., data = wine, method = 'glmnet', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
coef(model_glmnet$finalModel, s = model_glmnet$finalModel$tuneValue$lambda)
# let's also model using random forest just for fun
model_rf = train(TARGET ~ ., data = wine, method = 'ranger',
trControl = myControl)
# compare models
model_list = list(glm_full = model_glm_full, glm_sig1 = model_glm_sig1, glm_sig2 = model_glm_sig2,
glmnet = model_glmnet, rf = model_rf)
# collect resamples from the CV folds
resamps = resamples(model_list)
summary(resamps)
dotplot(resamp)
resamps = resamples(model_list)
summary(resamps)
dotplot(resamp)
dotplot(resamps)
dotplot(resamps, metric = 'RMSE')
summary(model_glm_sig2)
model_glm_sig2 = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson')#,
summary(model_glm_sig2)
model_glm_sig2 = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
final_model = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'),
trControl = trainControl(verboseIter = FALSE))
summary(final_model)
wine_test = read.csv('wine-evaluation-data.csv', stringsAsFactors = TRUE)
summary(wine_test)
wine_test = read.csv('wine-evaluation-data.csv', stringsAsFactors = TRUE)
wine_test$ResidualSugar = impute_median(wine_test$ResidualSugar)
wine_test$Chlorides = impute_median(wine_test$Chlorides)
wine_test$FreeSulfurDioxide = impute_median(wine_test$FreeSulfurDioxide)
wine_test$TotalSulfurDioxide = impute_median(wine_test$TotalSulfurDioxide)
wine_test$pH = impute_median(wine_test$pH)
wine_test$Sulphates = impute_median(wine_test$Sulphates)
wine_test$Alcohol = impute_median(wine_test$Alcohol)
wine_test[is.na(wine_test$STARS), 'STARS'] = 0
summary(wine_test)
pred = predict(final_model, newdata = wine_test)
pred = predict(final_model, newdata = wine_test)
wine_test$TARGET = pred
write.csv(wine_test, 'wine-evaluation-prediction.csv')
wine_test %>% ggplot(aes(x = TARGET)) + geom_histogram()
pred
pred = predict(final_model, newdata = wine_test, family = 'poisson')
pred
final_model = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS, data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'),
trControl = trainControl(verboseIter = FALSE))
summary(final_model)
# import and cleanse test data
wine_test = read.csv('wine-evaluation-data.csv', stringsAsFactors = TRUE)
wine_test$ResidualSugar = impute_median(wine_test$ResidualSugar)
wine_test$Chlorides = impute_median(wine_test$Chlorides)
wine_test$FreeSulfurDioxide = impute_median(wine_test$FreeSulfurDioxide)
wine_test$TotalSulfurDioxide = impute_median(wine_test$TotalSulfurDioxide)
wine_test$pH = impute_median(wine_test$pH)
wine_test$Sulphates = impute_median(wine_test$Sulphates)
wine_test$Alcohol = impute_median(wine_test$Alcohol)
wine_test[is.na(wine_test$STARS), 'STARS'] = 0
summary(wine_test)
# predict cases sold
pred = predict(final_model, newdata = wine_test)
wine_test$TARGET = pred
write.csv(wine_test, 'wine-evaluation-prediction.csv')
# check the distribution of predicted cases sold
wine_test %>% ggplot(aes(x = TARGET)) + geom_histogram()
wine$STARS_FLAG = if_else(wine$STARS == 0, 'NoStars', 'Stars')
summary(wine)
library(caret)
library(caretEnsemble)
set.seed(123)
# use cross validation to compare out-of-sample ROC for all models
# use the same folds for each model to ensure comparable results
myFolds = createFolds(wine$TARGET, k = 10)
# used instead of method = 'cv', number = 10
myControl = trainControl(verboseIter = FALSE, savePredictions = TRUE, index = myFolds)
# model using glm model
model_glm_full = train(TARGET ~ ., data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_full)
# let's drop any statistically insignificant variables at 5%
model_glm_sig1 = train(TARGET ~ VolatileAcidity + Chlorides + FreeSulfurDioxide + TotalSulfurDioxide +
pH + Sulphates + LabelAppeal + AcidIndex + STARS + STARS_FLAG,
data = wine, method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig1)
# let's again drop any additional statistically insigificant variables at 10%
model_glm_sig2 = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS + STARS_FLAG,
data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
summary(model_glm_sig2)
# let's try a glmnet model that combines ridge vs. lasso regression
# since it penalizes either or both magnitude and number of non-zero coefficients, it can be used for variable selection
model_glmnet = train(TARGET ~ ., data = wine, method = 'glmnet', family = 'poisson',
preProcess = c('center', 'scale'), trControl = myControl)
coef(model_glmnet$finalModel, s = model_glmnet$finalModel$tuneValue$lambda)
# let's also model using random forest just for fun
model_rf = train(TARGET ~ ., data = wine, method = 'ranger',
trControl = myControl)
# compare models
model_list = list(glm_full = model_glm_full, glm_sig1 = model_glm_sig1, glm_sig2 = model_glm_sig2,
glmnet = model_glmnet, rf = model_rf)
# collect resamples from the CV folds
resamps = resamples(model_list)
summary(resamps)
dotplot(resamps, metric = 'RMSE')
final_model = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS + STARS_FLAG,
data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'),
trControl = trainControl(verboseIter = FALSE))
final_model = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS + STARS_FLAG,
data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'),
trControl = trainControl(verboseIter = FALSE))
summary(final_model)
# import and cleanse test data
wine_test = read.csv('wine-evaluation-data.csv', stringsAsFactors = TRUE)
wine_test$ResidualSugar = impute_median(wine_test$ResidualSugar)
wine_test$Chlorides = impute_median(wine_test$Chlorides)
wine_test$FreeSulfurDioxide = impute_median(wine_test$FreeSulfurDioxide)
wine_test$TotalSulfurDioxide = impute_median(wine_test$TotalSulfurDioxide)
wine_test$pH = impute_median(wine_test$pH)
wine_test$Sulphates = impute_median(wine_test$Sulphates)
wine_test$Alcohol = impute_median(wine_test$Alcohol)
wine_test[is.na(wine_test$STARS), 'STARS'] = 0
summary(wine_test)
# predict cases sold
pred = predict(final_model, newdata = wine_test)
final_model = train(TARGET ~ VolatileAcidity + FreeSulfurDioxide + TotalSulfurDioxide +
LabelAppeal + AcidIndex + STARS + STARS_FLAG,
data = wine,
method = 'glm', family = 'poisson',
preProcess = c('center', 'scale'),
trControl = trainControl(verboseIter = FALSE))
summary(final_model)
# import and cleanse test data
wine_test = read.csv('wine-evaluation-data.csv', stringsAsFactors = TRUE)
wine_test$ResidualSugar = impute_median(wine_test$ResidualSugar)
wine_test$Chlorides = impute_median(wine_test$Chlorides)
wine_test$FreeSulfurDioxide = impute_median(wine_test$FreeSulfurDioxide)
wine_test$TotalSulfurDioxide = impute_median(wine_test$TotalSulfurDioxide)
wine_test$pH = impute_median(wine_test$pH)
wine_test$Sulphates = impute_median(wine_test$Sulphates)
wine_test$Alcohol = impute_median(wine_test$Alcohol)
wine_test[is.na(wine_test$STARS), 'STARS'] = 0
wine$STARS_FLAG = if_else(wine$STARS == 0, 'NoStars', 'Stars')
summary(wine_test)
# predict cases sold
pred = predict(final_model, newdata = wine_test)
wine_test$STARS_FLAG = if_else(wine_test$STARS == 0, 'NoStars', 'Stars')
pred = predict(final_model, newdata = wine_test)
wine_test$TARGET = pred
write.csv(wine_test, 'wine-evaluation-prediction.csv')
wine_test %>% ggplot(aes(x = TARGET)) + geom_histogram()
