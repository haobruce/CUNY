atm1 %>% mutate(Weekday = factor(weekdays(DATE), levels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
weekdays(DATE)
atm1 %>% mutate(Weekday = factor(weekdays(DATE), labels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge')
atm1 %>% mutate(Weekday = factor(weekdays(DATE), labels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
atm1 %>% mutate(Weekday = factor(weekdays(DATE), labels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
atm1_temp = atm1 %>% mutate(Weekday = factor(weekdays(DATE), labels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
atm1_temp
atm1_temp
atm1_temp = atm1 %>% mutate(Weekday1 = weekdays(DATE),
Weekday = factor(weekdays(DATE), labels = c('SN','M','T','W','TH','F','S')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
head(atm1_temp)
str(atm1_temp)
atm1_temp = atm1 %>% mutate(Weekday1 = weekdays(DATE),
Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
str(atm1_temp)
atm1 %>% mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge')
atm1 %>% mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge')
atm %>% mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ .)
atm %>% mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ .)
atm %>% filter(ATM != '') %>%
mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ .)
atm %>% filter(ATM != '') %>%
mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post')) %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ ., scales = 'free')
atm2 = atm %>% filter(ATM=='atm2') %>% select(DATE, Cash)
atm2_ts = as.xts(atm2$Cash, order.by = atm2$DATE)
attr(atm2_ts, 'frequency') = 7
atm2_auto = auto.arima(atm2_ts)
atm2 = atm %>% filter(ATM=='atm2') %>% select(DATE, Cash)
atm2
atm2
atm2 = atm %>% filter(ATM=='ATM2') %>% select(DATE, Cash)
atm2_ts = as.xts(atm2$Cash, order.by = atm2$DATE)
attr(atm2_ts, 'frequency') = 7
atm2_auto = auto.arima(atm2_ts)
atm2_auto = auto.arima(atm2_ts)
summary(atm2_auto)
tsdisplay(residuals(atm2_auto))
atm2_forecast = forecast(atm2_auto, h = 31)
plot(atm2_forecast)
atm2 = atm %>% filter(ATM=='ATM2') %>% select(DATE, Cash)
atm2_ts = as.xts(atm2$Cash, order.by = atm2$DATE)
attr(atm2_ts, 'frequency') = 7
plot(atm2_ts)
tsdisplay(atm2_ts)
plot(atm2_ts)
plot(atm2_forecast)
summary(atm2_auto)
write.csv(atm2_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm2_forecast.csv')
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 31)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
atm4_auto = auto.arima(atm4_ts)  #, stepwise = F, approximation = F)
summary(atm4_auto)
plot(atm4_ts)
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash) %>%
mutate(Cash = if_else(Cash > 10000, NA, Cash))
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash) %>%
mutate(Cash = if_else(Cash > 10000, NaN, Cash))
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm_all = atm %>% filter(ATM != '') %>%
mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
atm_all %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ ., scales = 'free')
atm_all %>% filter(Weekday = 'Tuesday', Period = 'Pre')
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre')
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre')
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre')
str(atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre'))
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000)
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 10000)
atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash))
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash))
atm4_subCash
atm4_subCash
str(atm4_subCash)
as.numeric(atm4_subCash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4_subCash
atm4[atm4$DATE == '2010-02-09', Cash]
atm4[atm4$DATE == '2010-02-09', 'Cash']
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 31)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 31)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
plot(atm4_ts)
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
atm4 = atm4 %>% filter(DATE <= '2010-04-15')
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 46)
plot(atm4_forecast)
atm4_auto = auto.arima(atm4_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 46)
plot(atm4_forecast)
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
# atm4 = atm4 %>% filter(DATE <= '2010-04-15')
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 46)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
atm1_auto = auto.arima(atm1_ts, D = 1)
atm1_auto = auto.arima(atm1_ts, D = 1)
summary(atm1_auto)
tsdisplay(residuals(atm1_auto))
atm1_forecast = forecast(atm1_auto, h = 31)
plot(atm1_forecast)
write.csv(atm1_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm1_forecast.csv')
atm1_auto = auto.arima(atm1_ts, D = 1)
summary(atm1_auto)
tsdisplay(residuals(atm1_auto))
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 46)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
atm4_forecast = forecast(atm4_auto, h = 31)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
atm2 = atm %>% filter(ATM=='ATM2') %>% select(DATE, Cash)
atm2_ts = as.xts(atm2$Cash, order.by = atm2$DATE)
attr(atm2_ts, 'frequency') = 7
plot(atm2_ts)
tsdisplay(atm2_ts)
atm2_auto = auto.arima(atm2_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm2_auto)
tsdisplay(residuals(atm2_auto))
atm2_forecast = forecast(atm2_auto, h = 31)
plot(atm2_forecast)
write.csv(atm2_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm2_forecast.csv')
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/')
library(fpp)
library(xts)
library(dplyr)
library(ggplot2)
atm = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ATM624Data.csv', stringsAsFactors = F)
atm$DATE = as.Date(atm$DATE, '%m/%d/%Y')
atm1 = atm %>% filter(ATM=='ATM1') %>% select(DATE, Cash)
atm1_ts = as.xts(atm1$Cash, order.by = atm1$DATE)
attr(atm1_ts, 'frequency') = 7
plot(atm1_ts)
tsdisplay(atm1_ts)
atm_all = atm %>% filter(ATM != '') %>%
mutate(Weekday = factor(weekdays(DATE), levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
Period  = if_else(DATE < '2010-2-14', 'Pre', 'Post'))
atm_all %>%
group_by(ATM, Period, Weekday) %>%
summarise(avg = mean(Cash, na.rm = T)) %>%
ggplot(aes(x = Weekday, y = avg, fill = Period)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(ATM ~ ., scales = 'free')
atm1_auto = auto.arima(atm1_ts, D = 1)
summary(atm1_auto)
tsdisplay(residuals(atm1_auto))
atm1_forecast = forecast(atm1_auto, h = 31)
plot(atm1_forecast)
write.csv(atm1_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm1_forecast.csv')
atm2 = atm %>% filter(ATM=='ATM2') %>% select(DATE, Cash)
atm2_ts = as.xts(atm2$Cash, order.by = atm2$DATE)
attr(atm2_ts, 'frequency') = 7
plot(atm2_ts)
tsdisplay(atm2_ts)
atm2_auto = auto.arima(atm2_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm2_auto)
tsdisplay(residuals(atm2_auto))
atm2_forecast = forecast(atm2_auto, h = 31)
plot(atm2_forecast)
write.csv(atm2_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm2_forecast.csv')
atm4 = atm %>% filter(ATM=='ATM4') %>% select(DATE, Cash)
atm4_subCash = atm_all %>% filter(Weekday == 'Tuesday', Period == 'Pre', Cash < 1000) %>%
summarise(avg = mean(Cash)) %>% as.numeric()
atm4[atm4$DATE == '2010-02-09', 'Cash'] = atm4_subCash
atm4_ts = as.xts(atm4$Cash, order.by = atm4$DATE)
attr(atm4_ts, 'frequency') = 7
plot(atm4_ts)
tsdisplay(atm4_ts)
atm4_auto = auto.arima(atm4_ts, D = 1)  #, stepwise = F, approximation = F)
summary(atm4_auto)
tsdisplay(residuals(atm4_auto))
atm4_forecast = forecast(atm4_auto, h = 31)
plot(atm4_forecast)
write.csv(atm4_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/atm4_forecast.csv')
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
plot(kwh)
str(kwh)
kwh$YYYY.MMM = as.Date(kwh$YYYY.MMM, '%Y-%m')
str(kwh)
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$YYYY.MMM = as.Date(kwh$YYYY.MMM, '%Y-%b')
str(kwh)
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
str(kwh)
kwh$Date = as.Date(kwh$YYYY.MMM, '%Y-%b')
str(kwh)
?as.Date
kwh$Date = as.Date(c(kwh$YYYY.MMM, '-01', '%Y-%b-%d')
atm$DATE = as.Date(atm$DATE, '%m/%d/%Y')
kwh$Date = as.Date(c(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$Date = as.Date(c(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
c(kwh$YYYY.MMM, '-01')
kwh$Date = as.Date(paste0(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh$Date
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$Date = as.Date(paste0(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh_ts = as.xts(kwh$KWH, order.by = kwh$Date)
attr(kwh_ts, 'frequency') = 7
kwh_ts
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$Date = as.Date(paste0(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh_ts = as.xts(kwh$KWH, order.by = kwh$Date)
attr(kwh_ts, 'frequency') = 12
plot(kwh_ts)
tsdisplay(kwh_ts)
plot(kwh_ts)
head(kwh)
head(month(kwh$Date))
library(lubridate)
install.packages('lubridate')
install.packages("lubridate")
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/')
library(fpp)
library(xts)
library(lubridate)
library(dplyr)
library(ggplot2)
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$Date = as.Date(paste0(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh_ts = as.xts(kwh$KWH, order.by = kwh$Date)
attr(kwh_ts, 'frequency') = 12
month(kwh$Date)
kwh %>% filter(month(Date) == 9) %>% summarise(avg = mean(KWH))
kwh %>% filter(month(Date) == 9) %>% summarise(avg = mean(KWH, na.rm = T))
kwh_sep08 = kwh %>% filter(month(Date) == 9) %>% summarise(avg = mean(KWH, na.rm = T)) %>% as.numeric()
kwh_ts['2008-09-01']
kwh_ts['2008-09-01'] = kwh_sep08
plot(kwh_ts)
kwh_sep08 = kwh %>% filter(month(Date) == 9) %>% summarise(avg = mean(KWH, na.rm = T)) %>% as.numeric()
kwh_ts['2008-09-01'] = kwh_sep08
plot(kwh_ts)
tsdisplay(kwh_ts)
plot(kwh_ts)
kwh_ts['2008-09-01']
kwh_ts
plot(kwh_ts)
kwh = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/ResidentialCustomerForecastLoad-624.csv', stringsAsFactors = F)
kwh$Date = as.Date(paste0(kwh$YYYY.MMM, '-01'), '%Y-%b-%d')
kwh_ts = as.xts(kwh$KWH, order.by = kwh$Date)
attr(kwh_ts, 'frequency') = 12
plot(kwh_ts)
kwh_ts
kwh_jul10 = kwh %>% filter(month(Date) == 7, year(Date) != 2010) %>%
summarise(avg = mean(KWH, na.rm = T)) %>% as.numeric()
kwh_jul10
kwh_ts['2010-07-01'] = kwh_jul10
plot(kwh_ts)
tsdisplay(kwh_ts)
kwh_auto = auto.arima(kwh_ts, D = 1)
summary(kwh_auto)
tsdisplay(residuals(kwh_auto))
kwh_auto = auto.arima(kwh_ts)
summary(kwh_auto)
tsdisplay(residuals(kwh_auto))
kwh_forecast = forecast(kwh_auto, h = 12)
plot(kwh_forecast)
write.csv(kwh_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/kwh_forecast.csv')
kwh_forecast = forecast(kwh_auto, h = 12)
kwh_auto = auto.arima(kwh_ts)
summary(kwh_auto)
tsdisplay(residuals(kwh_auto))
kwh_forecast = forecast(kwh_auto, h = 12)
plot(kwh_forecast)
write.csv(kwh_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/kwh_forecast.csv')
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water
?as_datetime
water$dt = as_datetime(water$Date.Time)
water
water$dt = ymd_hms(water$Date.Time)
water
water$dt = mdy_hms(water$Date.Time)
water
water$dt = mdy_hm(water$Date.Time)
water
water['2015-10-24']
water[water$dt['2015-10-24']]
water[water$dt['2015-10-24'],]
water[date(water$dt) = '2015-10-24',]
water[date(water$dt) == '2015-10-24',]
water_ts = as.xts(water$WaterFlow, order.by = water$dt)
water_ts
str(water)
max(water$dt)
min(water$dt)
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water = water %>% mutate(dt = mdy_hm(water$Date.Time),
m  = month(dt))
water = water %>% mutate(dt = mdy_hm(water$Date.Time),
m  = month(dt),
d  = day(dt)
h  = hour(dt))
water = water %>% mutate(dt = mdy_hm(water$Date.Time),
m  = month(dt),
d  = day(dt),
h  = hour(dt))
water
water_agg = water %>% mutate(dt = mdy_hm(water$Date.Time),
y = year(dt), m  = month(dt), d  = day(dt), h  = hour(dt)) %>%
group_by(y, m, d, h) %>%
summarise(Flow = sum(WaterFlow))
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water_agg = water %>% mutate(dt = mdy_hm(water$Date.Time),
y = year(dt), m  = month(dt), d  = day(dt), h  = hour(dt)) %>%
group_by(y, m, d, h) %>%
summarise(Flow = sum(WaterFlow))
water_agg
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water$dt = mdy_h(water$Date.Time)
water[date(water$dt) == '2015-10-24',)
water(date(water$dt) == '2015-10-24',)
water[date(water$dt) == '2015-10-24',]
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water$dt = mdy_h(water$Date.Time)
water$dt = mdy_hm(water$Date.Time)
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water$dt = mdy_hm(water$Date.Time)
water[date(water$dt) == '2015-10-24',]
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water_agg = water %>% mutate(dt = mdy_hm(water$Date.Time),
y = year(dt), m  = month(dt), d  = day(dt), h  = hour(dt)) %>%
mutate(ymd_h(paste(y, m, d, h, sep = ' '))) %>%
group_by(y, m, d, h) %>%
summarise(Flow = sum(WaterFlow))
water_ts = as.xts(water_agg$Flow, order.by = water$dt)
water %>% mutate(dt = mdy_hm(water$Date.Time),
y = year(dt), m  = month(dt), d  = day(dt), h  = hour(dt)) %>%
mutate(ymd_h(paste(y, m, d, h, sep = ' ')))
water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' ')))
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' ')))
water_agg
wate_agg[date(water_agg$Date.Time) = '2015-10-24',]
wate_agg[date(water_agg$Date.Time) == '2015-10-24',]
water_agg[date(water_agg$Date.Time) == '2015-10-24',]
water_agg$Date.Time
water_agg[date(water_agg$dt) == '2015-10-24',]
water = read.csv('/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/Waterflow_Pipe.csv', stringsAsFactors = F)
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' '))) %>%
group_by(y, m, d, h) %>%
summarise(Flow = sum(WaterFlow))
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' ')))
water_agg[date(water_agg$dt) == '2015-10-24',]
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(dt = ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' ')))
water_agg[date(water_agg$dt) == '2015-10-24',]
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(dt = ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' '))) %>%
group_by(dt) %>%
summarise(Flow = sum(WaterFlow))
water_agg
water_ts = as.xts(water_agg$Flow, order.by = water$dt)
str(water_agg)
water_ts = as.xts(water_agg$Flow, order.by = water_agg$dt)
water_ts = as.xts(water_agg$Flow, order.by = water_agg$dt)
attr(water_ts) = 24
attr(water_ts, 'frequency') = 24
plot(water_ts)
water_agg = water %>%
mutate(dt = mdy_hm(water$Date.Time)) %>%
mutate(dt = ymd_h(paste(year(dt), month(dt), day(dt), hour(dt), sep = ' '))) %>%
group_by(dt) %>%
summarise(AvgFlow = mean(WaterFlow))
water_ts = as.xts(water_agg$Flow, order.by = water_agg$dt)
water_ts = as.xts(water_agg$AvgFlow, order.by = water_agg$dt)
attr(water_ts, 'frequency') = 24
plot(water_ts)
tsdisplay(water_ts)
water_auto = auto.arima(water_ts, D = 1)  #, stepwise = F, approximation = F)
water_auto = auto.arima(water_ts, D = 1)  #, stepwise = F, approximation = F)
summary(water_auto)
tsdisplay(residuals(water_auto))
water_forecast = forecast(water_auto, h = 7 * 24)
plot(water_forecast)
write.csv(water_forecast$mean, '/Users/brucehao/Google Drive/CUNY/git/DATA624/Project 1/water_forecast.csv')
